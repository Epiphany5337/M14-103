# 加载必要的包
library(tidyverse)
library(ggplot2)
library(readr)
library(RColorBrewer)

# 读取数据（替换为你的实际路径）
data <- read_tsv("你的路径.txt")

# 转换为长数据
data_long <- data %>%
  pivot_longer(cols = -Strain, names_to = "Replicate", values_to = "MOI")

# 计算均值、标准差、标准误
summary_data <- data_long %>%
  group_by(Strain) %>%
  summarise(
    mean = mean(MOI, na.rm = TRUE),
    sd = sd(MOI, na.rm = TRUE),
    se = sd / sqrt(n()),
    .groups = "drop"
  )

# 提取 LGG 数据
LGG_data <- data_long %>% filter(Strain == "LGG")

# 显著性分析（先F检验，再根据是否等方差选择t检验）
p_data <- data_long %>%
  filter(Strain != "LGG") %>%
  group_by(Strain) %>%
  summarise(
    p_value = tryCatch({
      var_test <- var.test(MOI, LGG_data$MOI)  # 方差检验
      equal_var <- var_test$p.value > 0.05     # 判断是否等方差
      t.test(MOI, LGG_data$MOI, var.equal = equal_var)$p.value  # t检验
    }, error = function(e) NA),
    .groups = "drop"
  ) %>%
  mutate(
    signif_label = case_when(
      is.na(p_value) ~ "",
      p_value < 0.001 ~ "***",
      p_value < 0.01 ~ "**",
      p_value < 0.05 ~ "*",
      TRUE ~ ""
    )
  )

# 合并绘图数据
plot_data <- summary_data %>%
  left_join(p_data, by = "Strain") %>%
  mutate(
    label_y = mean + se + 2,
    Color = ifelse(Strain == "LGG", brewer.pal(3, "Set1")[1], brewer.pal(3, "Set1")[2])
  )

# 画图
ggplot(plot_data, aes(x = Strain, y = mean, fill = Color)) +
  geom_bar(stat = "identity", width = 0.6, color = "black") +
  geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
  geom_text(aes(label = signif_label, y = label_y), vjust = 0, size = 5) +
  scale_y_continuous(
    name = "MOI (Adhesion)",
    breaks = seq(5, 40, 5),
    limits = c(0, 42),
    expand = c(0, 0)
  ) +
  scale_fill_identity() +
  theme_bw() +
  theme(
    text = element_text(family = "Times New Roman"),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    axis.text = element_text(size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid = element_blank(),
    panel.border = element_blank(),
    axis.line = element_line(color = "black"),
    axis.line.x = element_line(linewidth = 0.8),
    axis.line.y = element_line(linewidth = 0.8),
    legend.position = "none"
  ) +
  labs(x = "Strain")
